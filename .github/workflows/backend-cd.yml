name: Backend CD - Deploy to AKS

on:
  workflow_call:
    inputs:
      aks_cluster_name:
        required: true
        type: string
      aks_resource_group:
        required: true
        type: string
      aks_acr_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  deploy_backends:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Azure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y azure-cli
          az --version

      - name: Clear Azure CLI Cache
        run: az account clear

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Explicit Azure CLI Login
        run: |
          az login --service-principal \
            --username ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }} \
            --password ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }} \
            --tenant ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}

      - name: Debug Azure CLI Authentication
        run: |
          az account show
          az account list --query "[].{name:name, id:id, state:state, tenantId:tenantId}" -o table
          az ad sp show --id ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }} --query "{displayName:displayName, objectId:objectId}" -o table
          az role assignment list --scope /subscriptions/2006f28d-a628-4b7b-a2af-711153c24ba3/resourceGroups/deakin/providers/Microsoft.ContainerRegistry/registries/mivohd --query "[].{principalName:principalName, role:roleDefinitionName}" -o table

      - name: Register ContainerRegistry Provider
        run: |
          az provider register -n Microsoft.ContainerRegistry --subscription "2006f28d-a628-4b7b-a2af-711153c24ba3" --wait
          az provider show -n Microsoft.ContainerRegistry --subscription "2006f28d-a628-4b7b-a2af-711153c24ba3" --query "registrationState" -o tsv

      - name: Debug ACR Access
        run: |
          az account set --subscription "2006f28d-a628-4b7b-a2af-711153c24ba3"
          az acr list --subscription "2006f28d-a628-4b7b-a2af-711153c24ba3" --query "[].{name:name, resourceGroup:resourceGroup, loginServer:loginServer}" -o table || echo "Failed to list ACRs"
          az acr credential show -n ${{ inputs.aks_acr_name }} --query "{username:username, password:passwords[0].value}" -o table || echo "Failed to access ACR credentials"

      - name: Set AKS credentials
        run: az aks get-credentials --name ${{ inputs.aks_cluster_name }} --resource-group ${{ inputs.aks_resource_group }}

      - name: Set ACR pull secret
        run: |
          az account set --subscription "2006f28d-a628-4b7b-a2af-711153c24ba3"
          kubectl create secret docker-registry acr-auth \
            --docker-server=${{ inputs.aks_acr_name }}.azurecr.io \
            --docker-username=$(az acr credential show -n ${{ inputs.aks_acr_name }} --query username -o tsv) \
            --docker-password=$(az acr credential show -n ${{ inputs.aks_acr_name }} --query passwords[0].value -o tsv) \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Postgres DBs
        run: kubectl apply -f k8s/postgres.yaml

      - name: Deploy backend services to AKS
        run: |
          for svc in product_service order_service customer_service; do
            kubectl apply -f k8s/${svc}-service.yaml
            kubectl set image deployment/${svc}-service ${svc}-service=${{ inputs.aks_acr_name }}.azurecr.io/${svc}:${{ inputs.image_tag }}
          done

  trigger_frontend:
    needs: debug_frontend_file
    uses: ./.github/workflows/frontend-cd.yml
    with:
      aks_cluster_name: ${{ inputs.aks_cluster_name }}
      aks_resource_group: ${{ inputs.aks_resource_group }}
      aks_acr_name: ${{ inputs.aks_acr_name }}
      image_tag: ${{ inputs.image_tag }}
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}